{"version":3,"sources":["components/Form.jsx","components/HMenu.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","className","type","placeholder","htmlFor","useStyles","makeStyles","HMenu","position","top","right","iconB","width","height","color","stroke","background","border","icon","fontSize","options","classes","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","minWidth","maxHeight","map","option","MenuItem","selected","uuidv4","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAkBeA,EAhBF,WACX,OACE,sBAAKC,UAAU,OAAf,UACE,gDACA,uBAAOC,KAAK,OAAOC,YAAY,WAC/B,uBAAOD,KAAK,OAAOC,YAAY,iBAC/B,uBAAOD,KAAK,OAAOC,YAAY,mBAC/B,sBAAKF,UAAU,YAAf,UACE,uBAAOC,KAAK,aACZ,uBAAOE,QAAQ,WAAf,qFAEH,mD,iECLCC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,WACVC,IAAK,OACLC,MAAO,OACP,4BAA6B,CAC3BA,MAAO,SAGXC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,MAAO,QACPC,OAAQ,QACRC,WAAY,UACZ,UAAW,CACTF,MAAO,UACPC,OAAQ,UACRC,WAAY,QACZC,OAAQ,qBAEV,6BAA8B,CAC5BL,MAAO,OACPC,OAAQ,QAEV,6BAA8B,CAC5BD,MAAO,OACPC,OAAQ,QAEV,4BAA6B,CAC3BD,MAAO,OACPC,OAAQ,SAGZK,KAAM,CACJC,SAAU,GACV,6BAA8B,CAC5BA,SAAU,IAEZ,6BAA8B,CAC5BA,SAAU,IAEZ,4BAA6B,CAC3BA,SAAU,OAKVC,EAAU,CACd,UACA,UACA,QA0Cab,MAvCf,WACE,IAAMc,EAAUhB,IADD,EAGiBiB,mBAAS,MAH1B,mBAGRC,EAHQ,KAGEC,EAHF,KAITC,EAAOC,QAAQH,GAMfI,EAAc,WAClBH,EAAY,OAGd,OACE,sBAAKvB,UAAWoB,EAAQd,MAAxB,UACE,cAACqB,EAAA,EAAD,CAAY3B,UAAWoB,EAAQV,MAAOkB,aAAW,OAAOC,gBAAc,YAAYC,gBAAc,OAAOC,QAVvF,SAACC,GACnBT,EAAYS,EAAMC,gBAShB,SACE,cAAC,IAAD,CAAUjC,UAAWoB,EAAQH,SAG/B,cAACiB,EAAA,EAAD,CAAMC,GAAG,YAAYb,SAAUA,EAAUc,aAAW,EAACZ,KAAMA,EAAMa,QAASX,EACxEY,WAAY,CACVC,MAAO,CACLC,SAAU,QACVC,UAAW,QACX5B,MAAO,QACPE,WAAY,YANlB,SASGI,EAAQuB,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,CAAyBC,SAAqB,UAAXF,EAAoBZ,QAASL,EAAhE,SACGiB,GADYG,wBC9EVC,MATf,WACE,OACE,sBAAK/C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3085f6b0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = () => {\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>Jelentkezés</h1>\r\n      <input type=\"text\" placeholder=\"Név\" />\r\n      <input type=\"text\" placeholder=\"Email cím\" />\r\n      <input type=\"text\" placeholder=\"Telefonszám\" />\r\n      <div className=\"checkCont\">\r\n        <input type=\"checkbox\" />\r\n        <label htmlFor=\"checkbox\">Elolvastam és elfogadom az Adatkezelési Tájékoztatót.</label>\r\n      </div>\r\n     <button>ELKÜLD</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form","import React, { useState } from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  HMenu: {\r\n    position: 'absolute',\r\n    top: '25px',\r\n    right: '25px',\r\n    '@media (max-width: 360px)': {\r\n      right: '10px'\r\n    },\r\n  },\r\n  iconB: {\r\n    width: '110px',\r\n    height: '110px',\r\n    color: 'white',\r\n    stroke: 'white',\r\n    background: '#1f9285',\r\n    '&:hover': {\r\n      color: '#eca93d',\r\n      stroke: '#eca93d',\r\n      background: 'black',\r\n      border: \"2px solid #eca93d\",\r\n    },\r\n    '@media (max-width: 1300px)': {\r\n      width: '90px',\r\n      height: '90px',\r\n    },\r\n    '@media (max-width: 1000px)': {\r\n      width: '80px',\r\n      height: '80px',\r\n    },\r\n    '@media (max-width: 500px)': {\r\n      width: '70px',\r\n      height: '70px',\r\n    }\r\n  },\r\n  icon: {\r\n    fontSize: 60,\r\n    '@media (max-width: 1300px)': {\r\n      fontSize: 55,\r\n    },\r\n    '@media (max-width: 1000px)': {\r\n      fontSize: 50,\r\n    },\r\n    '@media (max-width: 500px)': {\r\n      fontSize: 45,\r\n    }\r\n  }\r\n});\r\n\r\nconst options = [\r\n  'Contact',\r\n  'Options',\r\n  'More'\r\n];\r\n\r\nfunction HMenu() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.HMenu}>\r\n      <IconButton className={classes.iconB} aria-label=\"more\" aria-controls=\"long-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <MenuIcon className={classes.icon} />\r\n      </IconButton>\r\n\r\n      <Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            minWidth: '150px',\r\n            maxHeight: '150px',\r\n            color: 'black',\r\n            background: '#eca93d'\r\n          },\r\n        }}>\r\n        {options.map((option) => (\r\n          <MenuItem key={uuidv4()} selected={option === 'Pyxis'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HMenu;","import './style/App.css';\nimport Form from './components/Form';\nimport HMenu from './components/HMenu';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <HMenu />\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}